pakcatt:
  ## Feature configuration
  application:
    mycall: PAKCAT-1 # Your callsign-SSID. Connections to this callsign will be accepted.
    # The Welcome message seen by users when they connect
    welcomeMessage: Welcome to PakCatt! Type help to learn more :-)
    defaultEndOfLine: "\n" # The default EOL sequence used to store content in the database

    # Beacon configuration
    beacon:
      message: PAKCAT-1 on frequency, running PakCatt. Connect to PAKCAT-1 to try it out.
      interval_minutes: 0 # An interval of 0 disables beaconing.
      destination: CQ # The destination address for beacon messages. This is typically 'CQ'.
      channel_identifiers: # List the channels beacon messages should be broadcast on.
        - 'Serial TNC'
        - 'TCP TNC'

    # Tell app configuration
    tell:
      channel_identifiers: # List the channels tell messages should be delivered on
        - 'Serial TNC'
        - 'TCP TNC'

    # Startup and shutdown messages
    # These messages are broadcast on air when Pakcatt starts up, and just before it shuts down
    startstop:
      send.startup.shutdown.messages: false
      startup.message: PAKCAT-1 back on frequency. Connect to PAKCAT-1 to try it out.
      shutdown.message: PAKCAT-1 going QRT for a software update. Be back soon.

    # Bulletin Board
    board:
      summaryLength: 10 # The length of topic and message summary test in listings
      promptTopicLength: 8 # The length of the topic summary placed in the prompt displayed when in a topic
      defaultPostListLength: 10 # The default number of posts presented in a listing within a topic

    scriptable:
      workingDir: ./
      timeout: 60 # Time allowed for scripts to run
      scripts:
        - name: 'Example Date'
          pathConnect: 'scripts/example_date_connect.sh'
          pathRequest: 'scripts/example_date_request.sh'
#       This script is an example that sends messages to stations that beacon from pre-defined locations
#       See location_messages_wrapper.sh and location_messages.kts
#        - name: 'Location messages'
#          pathConnect: 'scripts/location_messages_wrapper.sh'
#          pathRequest: 'scripts/location_messages_wrapper.sh'

  ## TNC Configuration
  tnc:
    ## Serial port / TNC configuration
    serial_connections:
      - channel_identifier: 'Serial TNC'
        port_path: /dev/<YOUR TNC SERIAL PATH>
        port_baud: 9600

    ## TCP/IP TNC connections
    tcp_connections:
      - channel_identifier: 'TCP TNC'
        ip_address: 127.0.0.1
        port: 8001

  ## Packet performance parameters
  network.packet:
    frame_size_max: 128 # The maximum number of bytes sent in each AX.25 frame
    frames_per_over: 4 # The maximum number of frames / packets sent in each transmission. 4 seems to be a good value. I wouldn't go more than 6.
    minTXPauseSeconds: 2 # The minimum amount of time left between transmissions
    deliveryRetryTimeSeconds: 10 # The time between re-sending frames that have not been acknowledged
    maxDeliveryAttempts: 10 # The number of times a frame is re-sent if not acknowledged


spring:
  ## Database configuration
  data.mongodb.database: pakcatt
  #spring.data.mongodb.host: 127.0.0.1
  #spring.data.mongodb.port: 27017

  ## TCP/IP server
  #server.address=127.0.0.1
  server.port: 8080

  freemarker.template-loader-path: classpath:/templates/
  freemarker.suffix: .ftl
  profiles.active: production


## Logging and development parameters
logging:
  pattern.console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%18.18logger{0}]){blue} %clr(${LOG_LEVEL_PATTERN:\t%5p:}) %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  level.pakcatt: info
